importsList = \
  android.os.Bundle,\
  android.content.Intent,\
  com.facebook.accountkit.AccessToken,\
  com.facebook.accountkit.AccountKit,\
  com.facebook.accountkit.AccountKitLoginResult,\
  com.facebook.accountkit.ui.AccountKitActivity,\
  com.facebook.accountkit.ui.AccountKitConfiguration,\
  com.facebook.accountkit.ui.LoginType

codeBlockFrameworkRequestField = \
  private static final int AK_FRAMEWORK_REQUEST_CODE = 42;

codeBlockOnCreateMethod = \
  @Override protected void onCreate(Bundle savedInstanceState) {\
    super.onCreate(savedInstanceState);\
  }

codeBlockOnCreate = \
  if (AccountKit.getCurrentAccessToken() != null) {\
    onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
  }

codeBlockOnActivityResultMethod = \
  @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {\
    super.onActivityResult(requestCode, resultCode, data);\
  }

codeBlockOnActivityResult = \
  if (requestCode == AK_FRAMEWORK_REQUEST_CODE) {\
    final AccountKitLoginResult loginResult = AccountKit.loginResultWithIntent(data);\
    if (loginResult != null && loginResult.getAccessToken() != null) {\
      onSuccessfulLogin(loginResult.getAccessToken());\
    } else {\
      onUnsuccessfulLogin(loginResult);\
    }\
  }

codeBlockOnSuccessfulLogin = \
  /**\n\
    * This method is called back when login was successful.\n\
    * @param accessToken AccountKit AccessToken to use\n\
    */\n\
  protected void onSuccessfulLogin(final AccessToken accessToken) {\
\n    // Do your login logic here!\n\
  }

codeBlockOnUnsuccessfulLogin = \
  /**\n\
    * This method is called back when login failed.\n\
    * @param loginResult Information about the result of login attempt\n\
    */\n\
  protected void onUnsuccessfulLogin(final AccountKitLoginResult loginResult) {\
\n    // Do your error handing here! For ex:\n\
    if (loginResult == null || loginResult.wasCancelled()) {\
\n      // Login was cancelled by user\n\
    } else if (loginResult.getError() != null) {\
\n      // There was a login error. Check loginResult.getError()\n\
    } else {\
\n      // An unknown error has occurred!\n\
    }\
  }

codeBlockDoLogin = \
  /**\n\
    * Call this method to initiate a login attempt and pop up AccountKit dialog\n\
    * @param loginType either LoginType.PHONE for phone login or LoginType.EMAIL for email\n\
    */\n\
  protected void doLogin(final LoginType loginType) {\
    if (AccountKit.getCurrentAccessToken() != null) {\
      onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
    }\
    final AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder =\n\
      new AccountKitConfiguration.AccountKitConfigurationBuilder(\
        loginType,\
        AccountKitActivity.ResponseType.TOKEN);\
    final Intent intent = new Intent(this, AccountKitActivity.class);\
    intent.putExtra(\
      AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,\
      configurationBuilder.build());\
    startActivityForResult(intent, AK_FRAMEWORK_REQUEST_CODE);\
  }
