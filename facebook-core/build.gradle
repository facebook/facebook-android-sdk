/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
 * copy, modify, and distribute this software in source code or binary form for use
 * in connection with the web services and APIs provided by Facebook.
 *
 * As with any software that integrates with the Facebook platform, your use of
 * this software is subject to the Facebook Developer Principles and Policies
 * [http://developers.facebook.com/policy/]. This copyright notice shall be
 * included in all copies or substantial portions of the software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

project.group = 'com.facebook.android'

project.ext.name = 'Facebook-Core-Android-SDK'
project.ext.artifactId = "facebook-core"
project.ext.description = 'Facebook Core Android SDK'
project.ext.url = 'https://github.com/facebook/facebook-android-sdk'

dependencies {
    def kotlin_ver = project.ext.kotlinVersion

    // Support Dependencies
    implementation "androidx.annotation:annotation:${project.ext.androidxVersion}"
    implementation "androidx.legacy:legacy-support-core-utils:${project.ext.androidxLegacyVersion}"

    //https://developer.android.com/google/play/installreferrer/library.html#java
    implementation 'com.android.installreferrer:installreferrer:1.0' //there are issues with 1.1 regarding permissions, asks for unnecessary permissions
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_ver"

    // Unit Tests
    testImplementation project(":facebook-testutil")
    testImplementation "junit:junit:$junitVersion"
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'androidx.test:core:1.0.0'

    testImplementation "org.mockito:mockito-inline:2.26.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    def powerMockVersion = '2.0.2'
    testImplementation "org.powermock:powermock-core:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"
    testImplementation 'org.assertj:assertj-core:3.15.0'

    testImplementation "com.android.installreferrer:installreferrer:1.0"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_ver"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_ver"

}

android {
    compileSdkVersion project.ext.compileSdk
    buildToolsVersion project.ext.buildTools

    defaultConfig {
        minSdkVersion project.ext.minSdk
        targetSdkVersion project.ext.targetSdk
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            debuggable true
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
    }

    testOptions {
        unitTests.all {
            jvmArgs '-XX:MaxPermSize=1024m'
            maxHeapSize = "4096m"
            // CrashShieldHandlerDebugTest is only available on Sandcastle and Github Actions
            // Because local compiling environment may recompile CrashShieldHandler multiple times
            // and generate false signals
            if (System.getenv("SANDCASTLE") != "1" && System.getenv("GITHUB_ACTIONS") != "1") {
                exclude "com/facebook/internal/instrument/crashshield/CrashShieldHandlerDebugTest.class"
            }
            if (System.getenv("GITHUB_ACTIONS") == "1") {
                exclude "com/facebook/appevents/ondeviceprocessing/OnDeviceProcessingManagerTest.class"
            }
        }
    }

    kotlinOptions {
        useOldBackend = true
        // Keep jvm target at 1.6 to maintain compatibility with Android API level < 26
        jvmTarget = "1.6"
    }

    if (System.getenv("SANDCASTLE") == "1") {
        testOptions {
            unitTests.all {
                systemProperty 'robolectric.dependency.repo.url', 'https://maven.thefacebook.com/nexus/content/repositories/central/'
                systemProperty 'robolectric.dependency.repo.id', 'central'
                systemProperty "java.net.preferIPv6Addresses", "true"
                systemProperty "java.net.preferIPv4Stack", "false"
            }
        }
    }
}

if (file("${rootDir}/internal/safekit-build.gradle").exists()) {
    project.apply from: "${rootDir}/internal/safekit-build.gradle"
}

apply from: "${rootDir}/maven.gradle"
repositories {
    mavenCentral()
}
