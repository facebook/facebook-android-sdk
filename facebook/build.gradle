/**
 * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 *
 * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
 * copy, modify, and distribute this software in source code or binary form for use
 * in connection with the web services and APIs provided by Facebook.
 *
 * As with any software that integrates with the Facebook platform, your use of
 * this software is subject to the Facebook Developer Principles and Policies
 * [http://developers.facebook.com/policy/]. This copyright notice shall be
 * included in all copies or substantial portions of the software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

project.group 'com.facebook.android'

project.ext.name = 'Facebook-Android-SDK'
project.ext.artifactId = "facebook-android-sdk"
project.ext.description = 'Facebook Android SDK'
project.ext.url = 'https://github.com/facebook/facebook-android-sdk'

dependencies {
    def kotlin_ver = '1.3.31'

    // Facebook Dependencies
    api project(':facebook-core')
    api project(':facebook-common')
    api project(':facebook-login')
    api project(":facebook-share")
    api project(":facebook-applinks")
    api project(":facebook-messenger")
    api project(":facebook-gamingservices")
    testImplementation project(":facebook-testutil")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_ver"
    // Unit Tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation 'org.robolectric:robolectric:4.4'
    testImplementation 'androidx.test:core:1.0.0'

    testImplementation "org.mockito:mockito-inline:2.26.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    def powerMockVersion = '2.0.2'
    testImplementation "org.powermock:powermock-core:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"
    testImplementation 'org.assertj:assertj-core:3.15.0'

    // Connected Tests
    androidTestImplementation 'org.mockito:mockito-core:3.2.4'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'

    testImplementation "com.android.installreferrer:installreferrer:1.0"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_ver"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_ver"

    testImplementation project(":facebook-places")

}

android {
    compileSdkVersion project.ext.compileSdk
    buildToolsVersion project.ext.buildTools

    defaultConfig {
        minSdkVersion project.ext.minSdk
        targetSdkVersion project.ext.targetSdk
        consumerProguardFiles 'proguard-project.txt'
        vectorDrawables.useSupportLibrary = true
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
        test {
            java {
                exclude '**/MonitorTest.java'
                exclude '**/MonitorLoggingManagerTest.java'
                exclude '**/AppEventsLoggerImplTest.java'
                exclude '**/UserSettingsManagerTest.java'
                exclude '**/LoginManagerTest.java'

                if (System.getenv("GITHUB_ACTIONS") == "1") {
                    exclude '**/OnDeviceProcessingManagerTest.java'
                }
            }
        }
    }
    testOptions {
        unitTests.all {
            jvmArgs '-XX:MaxPermSize=1024m'
            maxHeapSize = "1024m"
            // CrashShieldHandlerDebugTest is only available on Sandcastle and Github Actions
            // Because local compiling environment may recompile CrashShieldHandler multiple times
            // and generate false signals
            if (System.getenv("SANDCASTLE") != "1" && System.getenv("GITHUB_ACTIONS") != "1") {
                exclude "com/facebook/internal/instrument/crashshield/CrashShieldHandlerDebugTest.class"
            }
        }
    }

    if (System.getenv("SANDCASTLE") == "1") {
        testOptions {
            unitTests.all {
                systemProperty 'robolectric.dependency.repo.url', 'https://maven.thefacebook.com/nexus/content/repositories/central/'
                systemProperty 'robolectric.dependency.repo.id', 'central'
                systemProperty "java.net.preferIPv6Addresses", "true"
                systemProperty "java.net.preferIPv4Stack", "false"

            }
        }
    }
}

//to be 100% sure, make sure no kotlin code in src for production use
afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}
repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

apply from: "${rootDir}/maven.gradle"
